name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - ci-run-crypto-tests
  pull_request:
    branches:
      - ci-run-crypto-tests

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    env:
      NO_EMULATOR: 1

    steps:
      - uses: actions/checkout@v2

      - name: Get all git tags
        run: git fetch --prune --unshallow --tags

      - name: Build Nano S app test binary
        env:
          NANO_MODEL: nanos
        run: |
          make RELEASE_BUILD=0

      - name: Upload Nano S app test binary
        uses: actions/upload-artifact@v2
        with:
          name: app-nanos-test
          path: bin

      - name: Cleanup the repository
        run: |
          git clean -dxf

      - name: Build Nano X app test binary
        env:
          NANO_MODEL: nanox
        run: |
          make RELEASE_BUILD=0 BOLOS_SDK=$NANOX_SDK

      - name: Upload Nano X app test binary
        uses: actions/upload-artifact@v2
        with:
          name: app-nanox-test
          path: bin

      - name: Cleanup the repository
        run: |
          git clean -dxf

      - name: Build Nano S app release binary
        env:
          NANO_MODEL: nanos
        run: |
          make

      - name: Upload Nano S app release binary
        uses: actions/upload-artifact@v2
        with:
          name: app-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git clean -dxf

      - name: Build Nano X app release binary
        env:
          NANO_MODEL: nanox
        run: |
          make BOLOS_SDK=$NANOX_SDK

      - name: Upload Nano X app release binary
        uses: actions/upload-artifact@v2
        with:
          name: app-nanox
          path: bin

      - name: Cleanup the repository
        run: |
          git clean -dxf

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  test-speculos:
    name: Run speculos tests
    needs: build
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos@sha256:c5aa03b4b52caa31db6ebd77aacee837fbe04c1a77c74bfb312ba6d1817ed4ea
      options: --entrypoint /bin/bash

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -qy git netcat procps
          pip3 install ledgerblue pytest

      - name: Download Nano S app test binary
        uses: actions/download-artifact@v2
        with:
          name: app-nanos-test
          path: bin-nanos-test

      - name: Download Nano X app test binary
        uses: actions/download-artifact@v2
        with:
          name: app-nanox-test
          path: bin-nanox-test

      - name: Download Nano S app release binary
        uses: actions/download-artifact@v2
        with:
          name: app-nanos
          path: bin-nanos

      - name: Download Nano X app release binary
        uses: actions/download-artifact@v2
        with:
          name: app-nanox
          path: bin-nanox

      - name: Run full tests on Nano S app test binary
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
          SEED: course grief vintage slim tell hospital car maze model style elegant kitchen state purpose matrix gas grid enable frown road goddess glove canyon key
        run: |
          nohup bash -c "python3 /speculos/speculos.py --model nanos --display headless --automation file:emulator_automation.json --seed '${SEED}' bin-nanos-test/app.elf" > speculos.log 2<&1 &
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
          python3 tests/unit_tests.py --kind all
          kill -9 $(pgrep python3) $(pgrep qemu)

      - name: Upload speculos log
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: speculos-nanos-test-log
          path: speculos.log

      - name: Run full tests on Nano X app test binary
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
          SEED: course grief vintage slim tell hospital car maze model style elegant kitchen state purpose matrix gas grid enable frown road goddess glove canyon key
        run: |
          nohup bash -c "python3 /speculos/speculos.py --model nanox --display headless --automation file:emulator_automation.json --seed '${SEED}' bin-nanox-test/app.elf" > speculos.log 2<&1 &
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
          python3 tests/unit_tests.py --kind all
          kill -9 $(pgrep python3) $(pgrep qemu)

      - name: Upload speculos log
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: speculos-nanox-test-log
          path: speculos.log

      - name: Run tests on Nano S app release binary
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
          SEED: course grief vintage slim tell hospital car maze model style elegant kitchen state purpose matrix gas grid enable frown road goddess glove canyon key
        run: |
          nohup bash -c "python3 /speculos/speculos.py --model nanos --display headless --automation file:emulator_automation.json --seed '${SEED}' bin-nanos/app.elf" > speculos.log 2<&1 &
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
          pytest tests/unit_tests.py
          kill -9 $(pgrep python3) $(pgrep qemu)

      - name: Upload speculos log
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: speculos-nanos-log
          path: speculos.log

      - name: Run tests on Nano X app release binary
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
          SEED: course grief vintage slim tell hospital car maze model style elegant kitchen state purpose matrix gas grid enable frown road goddess glove canyon key
        run: |
          nohup bash -c "python3 /speculos/speculos.py --model nanox --display headless --automation file:emulator_automation.json --seed '${SEED}' bin-nanox/app.elf" > speculos.log 2<&1 &
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'
          pytest tests/unit_tests.py
          kill -9 $(pgrep python3) $(pgrep qemu)

      - name: Upload speculos log
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: speculos-nanox-log
          path: speculos.log
